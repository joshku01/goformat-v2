kind: pipeline
type: docker
name: default

# disable default git clone
clone:
  disable: true

## 定義基本路徑
workspace:
  base: /go/src
  path: ${DRONE_REPO_NAME}

steps:
  ## custom git clone default
  - name: clone
    image: plugins/drone-git:latest
    environment:
      RSYNC_KEY:
        from_secret: rsync_key
    commands:
      ## add git config
      - git config --global user.name "joshku01"
      - git config --global user.email "sd520255@gmail.com"
      - mkdir ~/.ssh
      - echo "$RSYNC_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      ## add to known hosts
      - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      ## git clone & git submodule
      - git clone ${DRONE_GIT_SSH_URL} .
      - git checkout $DRONE_COMMIT
      - git submodule update --recursive --init

  ## 備份 vendor.json & 設定 k8s image tag
  - name: backup-vendor-json
    image: nexus.cqgame.games/rd3/drone-git:latest
    commands:
      - echo "$(git rev-parse --short=7 ${DRONE_COMMIT_SHA})-dev" > ./tmp.txt
      - cat ./tmp.txt > .tags
      - echo ",latest-${DRONE_BRANCH}" >> .tags
      - mv vendor/vendor.json vendor.json
    when:
      ref: [refs/heads/develop, refs/heads/qatest, refs/heads/int]

  ## 備份正式站 vendor.json & 設定 k8s image tag
  - name: backup-prod-vendor-json
    image: nexus.cqgame.games/rd3/drone-git:latest
    commands:
      - echo ${DRONE_TAG}-prod  > ./tmp.txt
      - cat ./tmp.txt > .tags
      - echo ",latest-prod" >> .tags
      - mv vendor/vendor.json vendor.json
    when:
      ref: [refs/tags/v*,refs/tags/t*]

  ## vendor 快取 restore
  - name: restore-vendor-cache
    image: nexus.cqgame.games/rd3/drone-volume-cache:latest
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./vendor

  ## 編譯 golang
  - name: build-golang-code
    image: nexus.cqgame.games/rd3/drone-govendor:latest
    commands:
      - mv vendor.json vendor/vendor.json
      - govendor sync
      - swag init

  ## vendor 快取 rebuild
  - name: rebuild-vendor-cache
    image: nexus.cqgame.games/rd3/drone-volume-cache:latest
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./vendor

  ## 建置容器並傳至 harbor (dev qa INT Project)
  - name: build-image
    image: nexus.cqgame.games/rd3/drone-docker:18.09.6
    settings:
      registry: nexus.cqgame.games
      template: >
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      dockerfile: ./k8s.Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      ref: [refs/heads/develop, refs/heads/qatest, refs/heads/int]

  ## 建置容器並傳至 harbor (T2 Project)
  - name: build-sync-images
    image: nexus.cqgame.games/rd3/drone-docker:18.09.6
    settings:
      registry: nexus.cqgame.games
      repo: nexus.cqgame.games/rd3-sync/golang-${DRONE_REPO_NAME}
      dockerfile: ./k8s.Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      ref: [refs/tags/v*,refs/tags/t*]

  ## 重新覆蓋 .tag 檔案內容
  - name: rebuild-tag-file
    image: nexus.cqgame.games/rd3/drone-git:latest
    commands:
      - cat ./tmp.txt > .tags
      - cat .tags

  ## 佈署至 dev k8s 環境
  - name: deploy-dev-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-dev-${DRONE_REPO_NAME}
      deployment: dev-${DRONE_REPO_NAME}-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: dev-${DRONE_REPO_NAME}
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/heads/develop]

    ## 佈署至 grpc dev k8s 環境
  - name: deploy-dev-grpc-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-dev-${DRONE_REPO_NAME}
      deployment: dev-${DRONE_REPO_NAME}-grpc-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: dev-${DRONE_REPO_NAME}-grpc
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/heads/develop]

  ## 佈署至 qa k8s 環境
  - name: deploy-qa-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-qa-${DRONE_REPO_NAME}
      deployment: qa-${DRONE_REPO_NAME}-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: qa-${DRONE_REPO_NAME}
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/heads/qatest]

    ## 佈署至 grpc qa k8s 環境
  - name: deploy-qa-grpc-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-qa-${DRONE_REPO_NAME}
      deployment: qa-${DRONE_REPO_NAME}-grpc-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: qa-${DRONE_REPO_NAME}-grpc
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/heads/qatest]

  ## 佈署至 int k8s 環境
  - name: deploy-int-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-int-${DRONE_REPO_NAME}
      deployment: int-${DRONE_REPO_NAME}-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: int-${DRONE_REPO_NAME}
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/heads/int]

    ## 佈署至 grpc int k8s 環境
  - name: deploy-int-grpc-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-int-${DRONE_REPO_NAME}
      deployment: int-${DRONE_REPO_NAME}-grpc-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: int-${DRONE_REPO_NAME}-grpc
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/heads/int]

  ## 推送至正式站 gitlab
  - name: push-release
    image: nexus.cqgame.games/rd3/drone-git:latest
    environment:
      RSYNC_KEY:
        from_secret: rsync_key
    commands:
      - git config --global user.name "drone"
      - git config --global user.email "drone@cchntek.com"
      - mkdir ~/.ssh
      - echo "$RSYNC_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keyscan -H gitlab.cqgame.info >> ~/.ssh/known_hosts
      - cd /tmp
      - git clone git@gitlab.cqgame.info:RD3/${DRONE_REPO_NAME}.git
      - cp -rf /go/src/${DRONE_REPO_NAME}/* ./${DRONE_REPO_NAME}/
      - cp /go/src/${DRONE_REPO_NAME}/.drone.yml ./${DRONE_REPO_NAME}/
      - cd ${DRONE_REPO_NAME}
      - sed -e 's/nexus.cqgame.games\\/rd3/nexus.cqgame.cc\\/rd3-sync/' -i .drone.yml
      - git add --all
      - git commit -m "Build - ${DRONE_TAG}"
      - git tag -a release-${DRONE_TAG} -m "Build - ${DRONE_TAG}" -f
      - git push origin release-${DRONE_TAG} -f
    when:
      ref: [refs/tags/v*, refs/tags/t*]

  ## 佈署至 pro k8s 環境
  - name: deploy-pro-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-pro-${DRONE_REPO_NAME}
      deployment: pro-${DRONE_REPO_NAME}-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: pro-${DRONE_REPO_NAME}
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/tags/release-v*]

    ## 佈署至 grpc pro k8s 環境
  - name: deploy-pro-grpc-k8s
    image: nexus.cqgame.games/rd3/drone-kubernetes:latest
    settings:
      kubernetes_server: https://k8s.ny.corp/k8s/clusters/local
      namespace: rd3-pro-${DRONE_REPO_NAME}
      deployment: pro-${DRONE_REPO_NAME}-grpc-deployment
      repo: nexus.cqgame.games/rd3/golang-${DRONE_REPO_NAME}
      container: pro-${DRONE_REPO_NAME}-grpc
      use_tags_file: true
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      ref: [refs/tags/release-v*]

  ## Telegram 推播通知
  - name: telegram
    image: nexus.cqgame.games/rd3/drone-telegram:1.3.5
    settings:
      token:
        from_secret: telegram_token
      to:
        from_secret: telegram_to
      format: markdown
      message:  >
        {{#success build.status}}
        ✅ Build #{{build.number}} of `{{repo.name}}` succeeded.

        📝 Commit by `{{commit.author}}` on `{{commit.branch}}`:

        ```
        {{commit.message}}
        ```

        🌐 {{ build.link }}
        {{else}}
        ❌ Build #{{build.number}} of `{{repo.name}}` failed.

        📝  Commit by `{{commit.author}}` on `{{commit.branch}}`:

        ```
        {{commit.message}}
        ```
        🌐 {{ build.link }}
        {{/success}}


        〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️
    when:
      status: [ success, failure ]

## VM 掛載路徑
volumes:
  - name: cache
    host:
      path: /usr/local/app/cache
  - name: docker
    host:
      path: /var/run/docker.sock

## 載入 docker config 設定
image_pull_secrets:
  - dockerconfigjson

# 觸發 pipeline 條件
trigger:
  ref:
    include: [refs/heads/develop, refs/heads/qatest, refs/heads/int, refs/tags/v*, refs/tags/t*, refs/tags/release-v*]
